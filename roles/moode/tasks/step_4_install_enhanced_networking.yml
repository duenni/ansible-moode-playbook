- name: Step 4 - install Host AP mode
  become: true
  apt: name={{item}} state=present
  with_items:
    - dnsmasq
    - hostapd

- name: Step 4 - systemd disable hostapd & dnsmasq
  become: true
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
    daemon-reload: yes
  with_items:
    - hostapd
    - dnsmasq

- name: Step 4 - install Bluetooth packages
  become: true
  apt: name={{ item }} state=present
  with_items:
    - bluez
    - bluez-firmware
    - pi-bluetooth
    - dh-autoreconf
    - expect
    - libortp-dev
    - libbluetooth-dev
    - libasound2-dev
    - libusb-dev
    - libglib2.0-dev
    - libudev-dev
    - libical-dev
    - libreadline-dev
    - libsbc1
    - libsbc-dev

- name: Step 4 - git checkout bluez-alsa
  become: true
  git:
    repo: git://github.com/Arkq/bluez-alsa.git
    dest: /tmp/bluez-alsa
    version: 99d9d72a5aed22dd755485a2661e209ded697079 #Nov 15, 2017

- name: Step 4 - autoreconf bluez-alsa
  become: true
  shell: chdir=/tmp/bluez-alsa autoreconf --install creates=/tmp/bluez-alsa/compile

- name: Step 4 - mkdir build for bluez-alsa
  become: true
  file: 
    path: /tmp/bluez-alsa/build 
    state: directory

- name: Step 4 - bluez-alsa configure && make && make install
  become: true
  command: "{{ item }}"
  args:
    chdir: /tmp/bluez-alsa/build #NOT - chdir:
    creates: /usr/bin/bluealsa
  with_items:
    - ../configure --disable-hcitop --with-alsaplugindir=/usr/lib/arm-linux-gnueabihf/alsa-lib
    - make
    - make install

- name: Step 4 - delete bluez-alsa build dirs
  become: true
  file: 
    state: absent
    path: /tmp/bluez-alsa

- name: Step 4 - disable bluetooth, bluealsa and hcuistart 
  become: true
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
    daemon_reload: yes
  with_items:
    - 'bluetooth.service'
    - 'hciuart.service'

- name: Step 4 - mkdir var/run/bluealsa
  become: true
  file: 
    path: /var/run/bluealsa
    state: directory
    recurse: yes #works like mkdir -p

- name: Step 4 - reboot
  become: true
  shell: sleep 2 && shutdown -r now
  async: 1
  poll: 0

- name: Step 4 - wait for pi to return after reboot
  wait_for: >
    host={{ ansible_default_ipv4.address }}
    port=22
    delay=10
    timeout=120
  delegate_to: localhost